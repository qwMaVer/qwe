import { useEffect, useState } from "react";

function App() {
  const [user, setUser] = useState(null);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    const tg = window.Telegram.WebApp;
    tg.ready();

    const initData = tg.initDataUnsafe;

    if (initData?.user) {
      const u = initData.user;
      setUser(u);

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ backend
      fetch("http://localhost:3000/user", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          id: u.id,
          first_name: u.first_name,
          username: u.username,
        }),
      })
        .then((res) => res.json())
        .then((data) => {
          console.log("–û—Ç–≤–µ—Ç –æ—Ç backend:", data);
          setUser(data); // —Ç–µ–ø–µ—Ä—å user = —Å –±–∞–ª–∞–Ω—Å–æ–º
          setLoading(false);
        })
        .catch((err) => {
          console.error("–û—à–∏–±–∫–∞:", err);
          setLoading(false);
        });
    } else {
      console.log("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã (–±—Ä–∞—É–∑–µ—Ä).");
      setLoading(false);
    }
  }, []);

  if (loading) return <p>–ó–∞–≥—Ä—É–∑–∫–∞...</p>;

  return (
    <div style={{ padding: 20 }}>
      <h1>Telegram MiniApp üöÄ</h1>

      {user ? (
        <div>
          <p><b>ID:</b> {user.id}</p>
          <p><b>–ò–º—è:</b> {user.first_name}</p>
          <p><b>–Æ–∑–µ—Ä–Ω–µ–π–º:</b> @{user.username}</p>
          <p><b>–ë–∞–ª–∞–Ω—Å:</b> {user.balance} ‚≠ê</p>
        </div>
      ) : (
        <p>–û—Ç–∫—Ä–æ–π –º–µ–Ω—è –≤–Ω—É—Ç—Ä–∏ Telegram, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ</p>
      )}
    </div>
  );
}

export default App;
