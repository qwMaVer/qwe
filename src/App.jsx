import { useEffect, useState } from "react";

function App() {
  const [user, setUser] = useState(null);
  const [loading, setLoading] = useState(true);
  const [result, setResult] = useState(null);

  const prizes = [
    "üéÅ 50‚≠ê –±–æ–Ω—É—Å",
    "üéâ –°—Ç–∏–∫–µ—Ä Telegram",
    "üåü NFT –ø—Ä–∏–∑",
    "üò¢ –ü—É—Å—Ç–æ, –Ω–∏—á–µ–≥–æ –Ω–µ –≤—ã–∏–≥—Ä–∞–ª",
    "üî• –†–µ–¥–∫–∏–π NFT",
  ];

  useEffect(() => {
    const tg = window.Telegram.WebApp;
    tg.ready();

    const initData = tg.initDataUnsafe;

    if (initData?.user) {
      const u = initData.user;

      fetch("http://localhost:3000/user", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ id: u.id, first_name: u.first_name, username: u.username }),
      })
        .then((res) => res.json())
        .then((data) => {
          setUser(data);
          setLoading(false);
        })
        .catch((err) => {
          console.error(err);
          setLoading(false);
        });
    } else {
      setLoading(false);
    }
  }, []);

  const spinWheel = () => {
    if (!user || user.balance < 10) {
      alert("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–≤–µ–∑–¥ ‚≠ê –¥–ª—è –∫—Ä—É—Ç–∫–∏ (10‚≠ê)");
      return;
    }

    // —É–º–µ–Ω—å—à–∞–µ–º –±–∞–ª–∞–Ω—Å –ª–æ–∫–∞–ª—å–Ω–æ
    setUser((prev) => ({ ...prev, balance: prev.balance - 10 }));

    // –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ backend, —á—Ç–æ–±—ã —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å
    fetch("http://localhost:3000/user/spin", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ id: user.id }),
    })
      .then((res) => res.json())
      .then((data) => {
        setUser(data);
        setResult(data.lastPrize);
      });
  };

  if (loading) return <p>–ó–∞–≥—Ä—É–∑–∫–∞...</p>;

  return (
    <div style={{ padding: 20 }}>
      <h1>Telegram MiniApp üöÄ</h1>

      {user ? (
        <div>
          <p><b>ID:</b> {user.id}</p>
          <p><b>–ò–º—è:</b> {user.first_name}</p>
          <p><b>–ë–∞–ª–∞–Ω—Å:</b> {user.balance} ‚≠ê</p>

          <button onClick={spinWheel} style={{ padding: "10px 20px", marginTop: 20 }}>
            –ö—Ä—É—Ç–∏—Ç—å —Ä—É–ª–µ—Ç–∫—É (10‚≠ê)
          </button>

          {result && (
            <div style={{ marginTop: 20, fontSize: 20 }}>
              üéØ –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}
            </div>
          )}
        </div>
      ) : (
        <p>–û—Ç–∫—Ä–æ–π –º–µ–Ω—è –≤–Ω—É—Ç—Ä–∏ Telegram, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ</p>
      )}
    </div>
  );
}

export default App;
